I"GB<p>The <code class="highlighter-rouge">Universe</code> is the fundamental data structure of MDAnalysis. It contains all the topology and trajectory data of a simulation system. Normally, a <code class="highlighter-rouge">Universe</code> can be created from files:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">universe</span>  <span class="o">=</span> <span class="n">mda</span><span class="p">.</span><span class="n">Universe</span><span class="p">(</span><span class="n">topology</span><span class="p">,</span> <span class="n">trajectory</span><span class="p">)</span>
</code></pre></div></div>

<p>where <code class="highlighter-rouge">topology</code> must be specified to access ‘atom’-wise information of the system; <code class="highlighter-rouge">trajectory</code> , on the other hand, can be either loaded from a trajectory file, deduced from <code class="highlighter-rouge">topology</code> (e.g. when it is a pdb file), or absent at all. If <code class="highlighter-rouge">in_memory = True</code> , the trajectory will be loaded directly into memory with <code class="highlighter-rouge">MemoryReader</code>, while in default, it will be parsed as a corresponding reader for different types of trajectories.</p>

<p>Let’s have a look at the stars in a <code class="highlighter-rouge">Universe</code> after it is created.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">u</span> <span class="o">=</span> <span class="n">mda</span><span class="p">.</span><span class="n">Universe</span><span class="p">(</span><span class="n">GRO</span><span class="p">,</span> <span class="n">XTC</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">u</span><span class="p">.</span><span class="n">__dict__</span><span class="p">)</span>

<span class="p">{</span><span class="s">'_cache'</span><span class="p">:</span> <span class="p">{},</span>
 <span class="s">'_anchor_name'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
 <span class="s">'_anchor_uuid'</span><span class="p">:</span> <span class="n">UUID</span><span class="p">(</span><span class="s">'a1b4e353-aeaf-4830-8de7-cadadcfc35da'</span><span class="p">),</span>
 <span class="s">'atoms'</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">AtomGroup</span> <span class="k">with</span> <span class="mi">47681</span> <span class="n">atoms</span><span class="o">&gt;</span><span class="p">,</span>
 <span class="s">'residues'</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">ResidueGroup</span> <span class="k">with</span> <span class="mi">11302</span> <span class="n">residues</span><span class="o">&gt;</span><span class="p">,</span>
 <span class="s">'segments'</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">SegmentGroup</span> <span class="k">with</span> <span class="mi">1</span> <span class="n">segment</span><span class="o">&gt;</span><span class="p">,</span>
 <span class="s">'filename'</span><span class="p">:</span> <span class="s">'data/adk_oplsaa.gro'</span><span class="p">,</span>
 <span class="s">'_kwargs'</span><span class="p">:</span> <span class="p">{</span><span class="s">'transformations'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
  <span class="s">'guess_bonds'</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span>
  <span class="s">'vdwradii'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
  <span class="s">'anchor_name'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
  <span class="s">'is_anchor'</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span>
  <span class="s">'in_memory'</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span>
  <span class="s">'in_memory_step'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="s">'format'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
  <span class="s">'topology_format'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
  <span class="s">'all_coordinates'</span><span class="p">:</span> <span class="bp">False</span><span class="p">},</span>
 <span class="s">'_topology'</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">topology</span><span class="p">.</span><span class="n">Topology</span> <span class="n">at</span> <span class="mh">0x7febf011a690</span><span class="o">&gt;</span><span class="p">,</span>
 <span class="s">'_class_bases'</span><span class="p">:</span> <span class="p">{</span><span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">GroupBase</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span>
<span class="n">groups</span><span class="p">.</span><span class="n">_TopologyAttrContainer</span><span class="p">,</span>
  <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">AtomGroup</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span>
<span class="n">_TopologyAttrContainer</span><span class="p">,</span>
  <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">ResidueGroup</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span>
<span class="n">_TopologyAttrContainer</span><span class="p">,</span>
  <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">SegmentGroup</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span>
<span class="n">_TopologyAttrContainer</span><span class="p">,</span>
  <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">ComponentBase</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span>
<span class="n">_TopologyAttrContainer</span><span class="p">,</span>
<span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">Atom</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">_TopologyAttrContainer</span><span class="p">,</span>
<span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">Residue</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">_TopologyAttrContainer</span><span class="p">,</span>
<span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">Segment</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">_TopologyAttrContainer</span><span class="p">},</span>
<span class="s">'_classes'</span><span class="p">:</span> <span class="p">{</span><span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">AtomGroup</span><span class="p">:</span> 
<span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">AtomGroup</span><span class="p">,</span>
<span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">ResidueGroup</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">ResidueGroup</span><span class="p">,</span>
<span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">SegmentGroup</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">SegmentGroup</span><span class="p">,</span>
<span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">Atom</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">Atom</span><span class="p">,</span>
<span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">Residue</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">Residue</span><span class="p">,</span>
<span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">Segment</span><span class="p">:</span> <span class="n">MDAnalysis</span><span class="p">.</span><span class="n">core</span><span class="p">.</span><span class="n">groups</span><span class="p">.</span><span class="n">Segment</span><span class="p">},</span>
 <span class="s">'_trajectory'</span><span class="p">:</span> <span class="o">&lt;</span><span class="n">XTCReader</span> <span class="n">data</span><span class="o">/</span><span class="n">adk_oplsaa</span><span class="p">.</span><span class="n">xtc</span> <span class="k">with</span> <span class="mi">10</span> <span class="n">frames</span> <span class="n">of</span> <span class="mi">47681</span> <span class="n">atoms</span><span class="o">&gt;</span><span class="p">}</span>
</code></pre></div></div>

<p><code class="highlighter-rouge">__dict__</code> is an important attribute in terms of pickling. As we will cover more in the following <strong>parallelism</strong> blog, an object in python has to be pickled/unpickled when it is transferred across different threads. In default, some normal data types can be easily pickled (or serialized), e.g. integers, strings, lists, etc.; while for user-defined classes, instances of such classes whose <code class="highlighter-rouge">__dict__</code> or the result of calling <code class="highlighter-rouge">__getstate__()</code> has to be picklable can be pickled.</p>

<p>So, what’s the current status of the picklibility of a <code class="highlighter-rouge">Universe</code> ?</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">star</span> <span class="ow">in</span> <span class="n">u</span><span class="p">.</span><span class="n">__dict__</span><span class="p">:</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">try</span><span class="p">:</span>
<span class="o">&gt;&gt;&gt;</span>     <span class="n">pickle</span><span class="p">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">u</span><span class="p">.</span><span class="n">__dict__</span><span class="p">[</span><span class="n">star</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span>     <span class="k">print</span><span class="p">(</span><span class="s">'{:20} can be pickled'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">star</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">except</span><span class="p">:</span>
<span class="o">&gt;&gt;&gt;</span>     <span class="k">print</span><span class="p">(</span><span class="s">'{:20} cannot be pickled'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">star</span><span class="p">))</span>

<span class="n">_cache</span>               <span class="n">can</span> <span class="n">be</span> <span class="n">pickled</span>
<span class="n">_anchor_name</span>         <span class="n">can</span> <span class="n">be</span> <span class="n">pickled</span>
<span class="n">_anchor_uuid</span>         <span class="n">can</span> <span class="n">be</span> <span class="n">pickled</span>
<span class="n">atoms</span>                <span class="n">can</span> <span class="n">be</span> <span class="n">pickled</span>
<span class="n">residues</span>             <span class="n">cannot</span> <span class="n">be</span> <span class="n">pickled</span>
<span class="n">segments</span>             <span class="n">cannot</span> <span class="n">be</span> <span class="n">pickled</span>
<span class="n">filename</span>             <span class="n">can</span> <span class="n">be</span> <span class="n">pickled</span>
<span class="n">_kwargs</span>              <span class="n">can</span> <span class="n">be</span> <span class="n">pickled</span>
<span class="n">_topology</span>            <span class="n">can</span> <span class="n">be</span> <span class="n">pickled</span>
<span class="n">_class_bases</span>         <span class="n">cannot</span> <span class="n">be</span> <span class="n">pickled</span>
<span class="n">_classes</span>             <span class="n">cannot</span> <span class="n">be</span> <span class="n">pickled</span>
<span class="n">_trajectory</span>          <span class="n">can</span> <span class="n">be</span> <span class="n">pickled</span>
</code></pre></div></div>

<p>Looks not bad, huh? We just need to fix a few attributes—if they are fixable—to make <code class="highlighter-rouge">Universe</code> pickable, but do we really need all these class attributes? In fact, upon pickling, a special function <code class="highlighter-rouge">__reduce__</code> is being called to declare how an object should be pickled. For our <code class="highlighter-rouge">Universe</code>, <code class="highlighter-rouge">topology</code> and <code class="highlighter-rouge">trajectory</code> might be quite enough for the reconstruction of the same <code class="highlighter-rouge">Universe</code>. Another caveat is that not all the <code class="highlighter-rouge">trajectory</code> readers can be pickled in default:</p>

<ul>
  <li><a href="https://github.com/MDAnalysis/mdanalysis/issues/1981">can’t pickle PDBReader on python 3 #1981</a></li>
  <li><a href="https://github.com/MDAnalysis/mdanalysis/issues/1940">ChainReader cannot be pickled #1940</a></li>
</ul>

<p>Overall, in this project, I will implement the pickling support to create a parallel <code class="highlighter-rouge">Universe</code> with the same stars, well, for parallel analysis.</p>

<h2 id="reference">Reference</h2>
<ul>
  <li><a href="https://docs.python.org/3/library/pickle.html">https://docs.python.org/3/library/pickle.html</a></li>
  <li><a href="https://www.mdanalysis.org/UserGuide/index.html">https://www.mdanalysis.org/UserGuide/index.html</a></li>
</ul>
:ET